name: CI – Build, Lint & Security Scans

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  # ─────────── Build Binaries ───────────
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]

    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build executable
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            pyinstaller --onefile \
              --add-data "config;config" \
              --add-data "static;static" \
              main.py
          else
            pyinstaller --onefile \
              --add-data "config:config" \
              --add-data "static:static" \
              main.py
          fi

      - name: Upload Windows EXE
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v2.3.1
        with:
          name: TestReportGenerator-windows
          path: dist/main.exe

      - name: Upload Linux Binary
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v2.3.1
        with:
          name: TestReportGenerator-linux
          path: dist/main

  # ─────────── Lint & Code-Quality ───────────
  lint:
    name: Lint (flake8) & Type-Checking
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dev dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 mypy

      - name: Run flake8
        run: flake8 .

      - name: Run mypy
        run: mypy .

  # ─────────── Security Scanning (CodeQL) ───────────
  codeql:
    name: Security Analysis with CodeQL
    runs-on: ubuntu-latest
    permissions:
      actions: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: ['python']
    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  # ─────────── Dependency Vulnerability Scan ───────────
  dependency-check:
    name: OWASP Dependency-Check
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Run dependency-check
        uses: OWASP/dependency-check-action@v6
        with:
          project: TestReportGenerator
          scan: '**/*.py'
          format: 'ALL'
